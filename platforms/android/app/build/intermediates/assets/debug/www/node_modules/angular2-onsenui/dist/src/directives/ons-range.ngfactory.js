/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
/* tslint:disable */
"use strict";
var import0 = require('./ons-range');
var import1 = require('@angular/core/src/change_detection/change_detection_util');
var import3 = require('@angular/core/src/linker/view_utils');
var Wrapper_OnsRange = (function () {
    function Wrapper_OnsRange(p0) {
        this._changed = false;
        this._changes = {};
        this.context = new import0.OnsRange(p0);
        this._expr_0 = import1.UNINITIALIZED;
    }
    Wrapper_OnsRange.prototype.ngOnDetach = function (view, componentView, el) {
    };
    Wrapper_OnsRange.prototype.ngOnDestroy = function () {
        this.context.ngOnDestroy();
        (this.subscription0 && this.subscription0.unsubscribe());
    };
    Wrapper_OnsRange.prototype.check__value = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_0, currValue))) {
            this._changed = true;
            this.context._value = currValue;
            this._changes['_value'] = new import1.SimpleChange(this._expr_0, currValue);
            this._expr_0 = currValue;
        }
    };
    Wrapper_OnsRange.prototype.ngDoCheck = function (view, el, throwOnChange) {
        var changed = this._changed;
        this._changed = false;
        if (!throwOnChange) {
            if (changed) {
                this.context.ngOnChanges(this._changes);
                this._changes = {};
            }
        }
        return changed;
    };
    Wrapper_OnsRange.prototype.checkHost = function (view, componentView, el, throwOnChange) {
    };
    Wrapper_OnsRange.prototype.handleEvent = function (eventName, $event) {
        var result = true;
        return result;
    };
    Wrapper_OnsRange.prototype.subscribe = function (view, _eventHandler, emit0) {
        this._eventHandler = _eventHandler;
        if (emit0) {
            (this.subscription0 = this.context._valueChange.subscribe(_eventHandler.bind(view, 'valueChange')));
        }
    };
    return Wrapper_OnsRange;
}());
exports.Wrapper_OnsRange = Wrapper_OnsRange;
//# sourceMappingURL=ons-range.ngfactory.js.map